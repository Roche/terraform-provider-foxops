{"openapi":"3.0.2","info":{"title":"foxops ðŸ¦Š","description":"OpenAPI Specification for foxops ðŸ¦Š","version":"0.0.0","x-logo":{"url":"https://emoji.beeimg.com/%F0%9F%A6%8A"}},"paths":{"/version":{"get":{"tags":["version"],"summary":"Get Version","description":"Retrieve the foxops version of this instance.","operationId":"get_version_version_get","responses":{"200":{"description":"Successful Response","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/auth/test":{"get":{"tags":["authentication"],"summary":"Test Authentication Route","operationId":"test_authentication_route_auth_test_get","responses":{"200":{"description":"Successful Response","content":{"text/plain":{"schema":{"type":"string"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]}},"/api/incarnations/{incarnation_id}/changes":{"post":{"tags":["incarnations","changes"],"summary":"Create Change","operationId":"create_change_api_incarnations__incarnation_id__changes_post","parameters":[{"required":true,"schema":{"title":"Incarnation Id","type":"integer"},"name":"incarnation_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateChangeRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]}},"/api/incarnations":{"get":{"tags":["incarnations"],"summary":"List Incarnations","description":"Returns a list of all known incarnations.\n\nThe list is sorted by incarnartion ID, with the oldest incarnation first.\n\nTODO: implement pagination","operationId":"list_incarnations_api_incarnations_get","parameters":[{"required":false,"schema":{"title":"Incarnation Repository","type":"string"},"name":"incarnation_repository","in":"query"},{"required":false,"schema":{"title":"Target Directory","type":"string","default":"."},"name":"target_directory","in":"query"}],"responses":{"200":{"description":"The list of incarnations in the inventory","content":{"application/json":{"schema":{"title":"Response 200 List Incarnations Api Incarnations Get","type":"array","items":{"$ref":"#/components/schemas/IncarnationBasic"}}}}},"400":{"description":"The `incarnation_repository` and `target_directory` settings where inconsistent","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"404":{"description":"An incarnation with the `incarnation_repository` and `target_directory` does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]},"post":{"tags":["incarnations"],"summary":"Create Incarnation","description":"Initializes a new incarnation and adds it to the inventory.\n\nIf the initialization fails, foxops will return the error in a `4xx` or `5xx` status code response.","operationId":"create_incarnation_api_incarnations_post","parameters":[{"required":false,"schema":{"title":"Allow Import","type":"boolean","default":false},"name":"allow_import","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DesiredIncarnationState"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"201":{"description":"The incarnation has been successfully initialized and was added to the inventory.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IncarnationWithDetails"}}}},"409":{"description":"There is already a foxops incarnation with the same repository and target directory","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"The reconciliation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]}},"/api/incarnations/{incarnation_id}":{"get":{"tags":["incarnations"],"summary":"Read Incarnation","description":"Returns the details of the incarnation from the inventory.","operationId":"read_incarnation_api_incarnations__incarnation_id__get","parameters":[{"required":true,"schema":{"title":"Incarnation Id","type":"integer"},"name":"incarnation_id","in":"path"}],"responses":{"200":{"description":"The actual state of the incarnation from the inventory","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IncarnationWithDetails"}}}},"404":{"description":"The incarnation was not found in the inventory","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]},"put":{"tags":["incarnations"],"summary":"Update Incarnation","description":"Reconciles the incarnation.\n\nIf the reconciliation fails, foxops will return the error in a `4xx` or `5xx` status code response.\n\nIf a reconciliation for the incarnation is already in progress a `409 CONFLICT` status code will be returned.\n\nIf no *desired incarnation state* is provided in the request body, foxops will use the\npersisted *actual state* and perform a reconciliation. This is seldomly useful, but can be used\nto update when a moving Git revision (e.g. a branch) is used.","operationId":"update_incarnation_api_incarnations__incarnation_id__put","parameters":[{"required":true,"schema":{"title":"Incarnation Id","type":"integer"},"name":"incarnation_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DesiredIncarnationStatePatch"}}},"required":true},"responses":{"200":{"description":"The incarnation was successfully reconciled","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IncarnationWithDetails"}}}},"400":{"description":"The desired incarnation state was not valid","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"404":{"description":"The incarnation was not found in the inventory","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"409":{"description":"The incarnation already has a reconciliation in progress","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"500":{"description":"The reconciliation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]},"delete":{"tags":["incarnations"],"summary":"Delete Incarnation","description":"Deletes the incarnation from the inventory.\n\nThe incarnation cannot be deleted if a reconciliation is in progress.\n\nThis won't delete the incarnation repository itself, but only deletes the\nincarnation from the inventory.","operationId":"delete_incarnation_api_incarnations__incarnation_id__delete","parameters":[{"required":true,"schema":{"title":"Incarnation Id","type":"integer"},"name":"incarnation_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"204":{"description":"The incarnation was successfully deleted"},"404":{"description":"The incarnation was not found in the inventory","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"409":{"description":"The incarnation already has a reconciliation in progress","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]}},"/api/incarnations/{incarnation_id}/reset":{"post":{"tags":["incarnations"],"summary":"Reset Incarnation","operationId":"reset_incarnation_api_incarnations__incarnation_id__reset_post","parameters":[{"required":true,"schema":{"title":"Incarnation Id","type":"integer"},"name":"incarnation_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IncarnationResetRequest"}}}},"responses":{"200":{"description":"The incarnation was successfully reset","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IncarnationResetResponse"}}}},"404":{"description":"The incarnation was not found in the inventory","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"422":{"description":"The incarnation does not have any customizations and there is nothing to reset","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}},"security":[{"StaticTokenHeaderAuth":[]}]}}},"components":{"schemas":{"ApiError":{"title":"ApiError","required":["message"],"type":"object","properties":{"message":{"title":"Message","type":"string"}}},"ChangeType":{"title":"ChangeType","enum":["direct","merge_request_manual","merge_request_automerge"],"description":"An enumeration."},"CreateChangeRequest":{"title":"CreateChangeRequest","required":["requested_version","requested_data"],"type":"object","properties":{"requested_version":{"title":"Requested Version","type":"string"},"requested_data":{"title":"Requested Data","type":"object","additionalProperties":{"type":"string"}},"change_type":{"allOf":[{"$ref":"#/components/schemas/ChangeType"}],"default":"direct"}}},"DesiredIncarnationState":{"title":"DesiredIncarnationState","required":["incarnation_repository","template_repository","template_repository_version","template_data"],"type":"object","properties":{"incarnation_repository":{"title":"Incarnation Repository","type":"string"},"target_directory":{"title":"Target Directory","type":"string","default":"."},"template_repository":{"title":"Template Repository","type":"string"},"template_repository_version":{"title":"Template Repository Version","type":"string"},"template_data":{"title":"Template Data","type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"integer"},{"type":"number"}]}},"automerge":{"title":"Automerge","type":"boolean","default":false}},"description":"A DesiredIncarnationState represents the desired state of an incarnation."},"DesiredIncarnationStatePatch":{"title":"DesiredIncarnationStatePatch","required":["automerge"],"type":"object","properties":{"template_repository_version":{"title":"Template Repository Version","type":"string"},"template_data":{"title":"Template Data","type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"integer"},{"type":"number"}]},"default":{}},"automerge":{"title":"Automerge","type":"boolean"}},"description":"A DesiredIncarnationStatePatch represents the patch for the desired state of an incarnation."},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"IncarnationBasic":{"title":"IncarnationBasic","required":["id","incarnation_repository","target_directory","commit_sha","commit_url"],"type":"object","properties":{"id":{"title":"Id","type":"integer"},"incarnation_repository":{"title":"Incarnation Repository","type":"string"},"target_directory":{"title":"Target Directory","type":"string"},"commit_sha":{"title":"Commit Sha","type":"string"},"commit_url":{"title":"Commit Url","type":"string"},"merge_request_id":{"title":"Merge Request Id","type":"string"},"merge_request_url":{"title":"Merge Request Url","type":"string"}}},"IncarnationResetRequest":{"title":"IncarnationResetRequest","type":"object","properties":{"override_version":{"title":"Override Version","type":"string"},"override_template_data":{"title":"Override Template Data","type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"integer"},{"type":"number"}]}}}},"IncarnationResetResponse":{"title":"IncarnationResetResponse","required":["incarnation_id","merge_request_id","merge_request_url"],"type":"object","properties":{"incarnation_id":{"title":"Incarnation Id","type":"integer"},"merge_request_id":{"title":"Merge Request Id","type":"string"},"merge_request_url":{"title":"Merge Request Url","type":"string"}}},"IncarnationWithDetails":{"title":"IncarnationWithDetails","required":["id","incarnation_repository","target_directory","commit_sha","commit_url","status"],"type":"object","properties":{"id":{"title":"Id","type":"integer"},"incarnation_repository":{"title":"Incarnation Repository","type":"string"},"target_directory":{"title":"Target Directory","type":"string"},"commit_sha":{"title":"Commit Sha","type":"string"},"commit_url":{"title":"Commit Url","type":"string"},"merge_request_id":{"title":"Merge Request Id","type":"string"},"merge_request_url":{"title":"Merge Request Url","type":"string"},"status":{"allOf":[{"$ref":"#/components/schemas/ReconciliationStatus"}],"description":"DEPRECATED. Use the 'merge_request_status' field instead."},"merge_request_status":{"$ref":"#/components/schemas/MergeRequestStatus"},"template_repository":{"title":"Template Repository","type":"string"},"template_repository_version":{"title":"Template Repository Version","type":"string"},"template_repository_version_hash":{"title":"Template Repository Version Hash","type":"string"},"template_data":{"title":"Template Data","type":"object","additionalProperties":{"anyOf":[{"type":"string"},{"type":"integer"},{"type":"number"}]}}}},"MergeRequestStatus":{"title":"MergeRequestStatus","enum":["open","merged","closed","unknown"],"description":"An enumeration."},"ReconciliationStatus":{"title":"ReconciliationStatus","enum":["unknown","pending","success","failed"],"description":"An enumeration."},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}},"securitySchemes":{"StaticTokenHeaderAuth":{"type":"apiKey","in":"header","name":"Authorization"}}}}